import * as Sequelize from 'sequelize';
import { Model, Optional } from 'sequelize';
import type { ac, acId } from './ac';
import type { order_detail, order_detailId } from './order_detail';
import type { warehouse_list, warehouse_listId } from './warehouse_list';
export interface order_masterAttributes {
    idno: number;
    EntryNo?: number;
    RefNo?: string;
    edate?: Date;
    sysdate?: Date;
    party_ac?: string;
    estatus?: string;
    remarks?: string;
    gst?: number;
    gstAmount?: number;
    sed?: number;
    sedAmount?: number;
    disc_p?: number;
    discount?: number;
    grossamount?: number;
    netamount?: number;
    Warehouse_Code?: string;
    Transporter?: string;
    DN_Address?: string;
    Circular_No?: number;
    Invoice_No?: string;
    Order_No?: string;
    Vendor_No?: string;
    Shop?: string;
    ent_date?: Date;
    itemdescription?: string;
    orderclosed?: number;
    posted?: number;
    ledgerbal?: number;
    overdue?: number;
    delivery_date?: Date;
    terms?: string;
    DVC_Per?: number;
    DVC_Amount?: number;
    DVC_Remarks?: string;
    dc_no?: number;
    alert_posted?: number;
    size_by?: string;
    fitted_by?: string;
    salesman?: string;
    doc_attached?: number;
    customer_name?: string;
    customer_address?: string;
    contact_no1?: string;
    contact_no2?: string;
}
export declare type order_masterPk = "idno";
export declare type order_masterId = order_master[order_masterPk];
export declare type order_masterOptionalAttributes = "EntryNo" | "RefNo" | "edate" | "sysdate" | "party_ac" | "estatus" | "remarks" | "gst" | "gstAmount" | "sed" | "sedAmount" | "disc_p" | "discount" | "grossamount" | "netamount" | "Warehouse_Code" | "Transporter" | "DN_Address" | "Circular_No" | "Invoice_No" | "Order_No" | "Vendor_No" | "Shop" | "ent_date" | "itemdescription" | "orderclosed" | "posted" | "ledgerbal" | "overdue" | "delivery_date" | "terms" | "DVC_Per" | "DVC_Amount" | "DVC_Remarks" | "dc_no" | "alert_posted" | "size_by" | "fitted_by" | "salesman" | "doc_attached" | "customer_name" | "customer_address" | "contact_no1" | "contact_no2";
export declare type order_masterCreationAttributes = Optional<order_masterAttributes, order_masterOptionalAttributes>;
export declare class order_master extends Model<order_masterAttributes, order_masterCreationAttributes> implements order_masterAttributes {
    idno: number;
    EntryNo?: number;
    RefNo?: string;
    edate?: Date;
    sysdate?: Date;
    party_ac?: string;
    estatus?: string;
    remarks?: string;
    gst?: number;
    gstAmount?: number;
    sed?: number;
    sedAmount?: number;
    disc_p?: number;
    discount?: number;
    grossamount?: number;
    netamount?: number;
    Warehouse_Code?: string;
    Transporter?: string;
    DN_Address?: string;
    Circular_No?: number;
    Invoice_No?: string;
    Order_No?: string;
    Vendor_No?: string;
    Shop?: string;
    ent_date?: Date;
    itemdescription?: string;
    orderclosed?: number;
    posted?: number;
    ledgerbal?: number;
    overdue?: number;
    delivery_date?: Date;
    terms?: string;
    DVC_Per?: number;
    DVC_Amount?: number;
    DVC_Remarks?: string;
    dc_no?: number;
    alert_posted?: number;
    size_by?: string;
    fitted_by?: string;
    salesman?: string;
    doc_attached?: number;
    customer_name?: string;
    customer_address?: string;
    contact_no1?: string;
    contact_no2?: string;
    party_ac_ac: ac;
    getParty_ac_ac: Sequelize.BelongsToGetAssociationMixin<ac>;
    setParty_ac_ac: Sequelize.BelongsToSetAssociationMixin<ac, acId>;
    createParty_ac_ac: Sequelize.BelongsToCreateAssociationMixin<ac>;
    Transporter_ac: ac;
    getTransporter_ac: Sequelize.BelongsToGetAssociationMixin<ac>;
    setTransporter_ac: Sequelize.BelongsToSetAssociationMixin<ac, acId>;
    createTransporter_ac: Sequelize.BelongsToCreateAssociationMixin<ac>;
    salesman_ac: ac;
    getSalesman_ac: Sequelize.BelongsToGetAssociationMixin<ac>;
    setSalesman_ac: Sequelize.BelongsToSetAssociationMixin<ac, acId>;
    createSalesman_ac: Sequelize.BelongsToCreateAssociationMixin<ac>;
    order_details: order_detail[];
    getOrder_details: Sequelize.HasManyGetAssociationsMixin<order_detail>;
    setOrder_details: Sequelize.HasManySetAssociationsMixin<order_detail, order_detailId>;
    addOrder_detail: Sequelize.HasManyAddAssociationMixin<order_detail, order_detailId>;
    addOrder_details: Sequelize.HasManyAddAssociationsMixin<order_detail, order_detailId>;
    createOrder_detail: Sequelize.HasManyCreateAssociationMixin<order_detail>;
    removeOrder_detail: Sequelize.HasManyRemoveAssociationMixin<order_detail, order_detailId>;
    removeOrder_details: Sequelize.HasManyRemoveAssociationsMixin<order_detail, order_detailId>;
    hasOrder_detail: Sequelize.HasManyHasAssociationMixin<order_detail, order_detailId>;
    hasOrder_details: Sequelize.HasManyHasAssociationsMixin<order_detail, order_detailId>;
    countOrder_details: Sequelize.HasManyCountAssociationsMixin;
    Warehouse_Code_warehouse_list: warehouse_list;
    getWarehouse_Code_warehouse_list: Sequelize.BelongsToGetAssociationMixin<warehouse_list>;
    setWarehouse_Code_warehouse_list: Sequelize.BelongsToSetAssociationMixin<warehouse_list, warehouse_listId>;
    createWarehouse_Code_warehouse_list: Sequelize.BelongsToCreateAssociationMixin<warehouse_list>;
    static initModel(sequelize: Sequelize.Sequelize): typeof order_master;
}
